{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Github\\\\Projeto-Pokedex\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-wrap: wrap;\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PokemonTile from \"../Components/PokemonCard\";\nimport ListPokemon from \"../Utils/ApiPokemons\";\nimport { useRouter } from 'next/router';\nvar GridWrapper = styled.div(_templateObject());\n_c = GridWrapper;\nexport default function index() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      ListaPokemon = _useState[0],\n      setListaPokemon = _useState[1];\n\n  useEffect(function () {\n    ListPokemon().then(function (success) {\n      setListaPokemon(success.results);\n    });\n  }, []);\n\n  function PokemonSelected(pokemonInfo) {\n    setPokemonSelected(pokemonInfo);\n    router.push('./details');\n  }\n\n  return /*#__PURE__*/_jsxDEV(GridWrapper, {\n    children: ListaPokemon.map(function (pokemon) {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        onClick: function onClick() {\n          return PokemonSelected(pokemonInfo);\n        },\n        children: [\"return \", /*#__PURE__*/_jsxDEV(PokemonTile, {\n          pokemon: pokemon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n\n_s(index, \"Fy5RWe48fXp1QIztYbANVJGn8x0=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"GridWrapper\");","map":{"version":3,"sources":["C:/Github/Projeto-Pokedex/pages/index.js"],"names":["React","useState","useEffect","styled","PokemonTile","ListPokemon","useRouter","GridWrapper","div","index","ListaPokemon","setListaPokemon","then","success","results","PokemonSelected","pokemonInfo","setPokemonSelected","router","push","map","pokemon"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAV,mBAAjB;KAAMD,W;AAOJ,eAAe,SAASE,KAAT,GAAiB;AAAA;;AAAA;;AAAA,kBACUR,QAAQ,CAAC,EAAD,CADlB;AAAA,MACvBS,YADuB;AAAA,MACTC,eADS;;AAI9BT,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,WAAW,GAAGO,IAAd,CAAoB,UAACC,OAAD,EAAa;AAC/BF,MAAAA,eAAe,CAACE,OAAO,CAACC,OAAT,CAAf;AACO,KAFT;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASC,eAAT,CAAyBC,WAAzB,EAAqC;AACnCC,IAAAA,kBAAkB,CAACD,WAAD,CAAlB;AACAE,IAAAA,MAAM,CAACC,IAAP,CAAY,WAAZ;AACD;;AAED,sBACE,QAAC,WAAD;AAAA,cACGT,YAAY,CAACU,GAAb,CAAiB,UAACC,OAAD,EAAa;AAC7B;AAAA;AAAK,QAAA,OAAO,EAAE;AAAA,iBAAMN,eAAe,CAACC,WAAD,CAArB;AAAA,SAAd;AAAA,2CACS,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEK;AAAtB;AAAA;AAAA;AAAA;AAAA,iBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAGD,KAJA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAzBuBZ,K","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PokemonTile from \"../Components/PokemonCard\";\r\nimport ListPokemon from \"../Utils/ApiPokemons\";\r\nimport { useRouter } from 'next/router'\r\n\r\nconst GridWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  `;\r\n\r\n  export default function index() {\r\n    const [ListaPokemon, setListaPokemon] = useState([])\r\n    \r\n    \r\n    useEffect(() => {\r\n      ListPokemon().then( (success) => {\r\n        setListaPokemon(success.results);\r\n              })\r\n    }, [])\r\n\r\n    function PokemonSelected(pokemonInfo){\r\n      setPokemonSelected(pokemonInfo)\r\n      router.push('./details')\r\n    }\r\n\r\n    return (\r\n      <GridWrapper>\r\n        {ListaPokemon.map((pokemon) => {\r\n          <div onClick={() => PokemonSelected(pokemonInfo)}>\r\n            return <PokemonTile pokemon={pokemon} />\r\n          </div>\r\n        })}\r\n        \r\n      </GridWrapper>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}